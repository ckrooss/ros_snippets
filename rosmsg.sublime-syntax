%YAML 1.2
---
name: ROS Message
# srv files are 2 messages with a --- separator
file_extensions: [msg,srv]
scope: source.rosmsg

variables:
  primitives: \b(bool|int8|uint8|int16|uint16|int32|uint32|int64|uint64|float32|float64|string|time|duration)\b
  id: '(?:[\p{L}_$][\p{L}\p{N}_$]*)'

contexts:
  main:
    - include: comment
    # for string constants, text after inline '#' isn't parsed as comment
    - include: string-constant
    - include: code
  
  comment:
    - match: '#'
      scope: punctuation.definition.comment.rosmsg
      push:
        - meta_scope: comment.line.number-sign.rosmsg
        - match: \n
          pop: true
  
  string-constant:
    # String constants, matches 'string' in 'string fieldname = STRING'
    - match: 'string(?=\s+{{id}}\s+=)'
      scope: storage.type.rosmsg
      push:
        - meta_scope: meta.string.line.rosmsg
        # Matches the equals
        - include: equals
        # Matches all chars after = in string constant declaration
        - match: (?<==).*
          scope: string.unquoted.rosmsg
        - match: \n
          pop: true

  code:
    - include: equals
    - include: types
    - include: constants-and-special-vars 
  
  equals:
    - match: (=)
      scope: keyword.operator.assignment.java

  types:
    # match ROS primitive types
    - match: '{{primitives}}'
      scope: storage.type.rosmsg
    # match package/Message or 'Header'
    - match: '({{id}}/{{id}})|Header'
      scope: support.class.rosmsg

  constants-and-special-vars:
    # match numeric values
    - match: '\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\b'
      scope: constant.numeric.rosmsg
    # Match constant names (Sublime colors constant name the same as the value)
    # - match: '{{id}}'
      # scope: constant.other.rosmsg